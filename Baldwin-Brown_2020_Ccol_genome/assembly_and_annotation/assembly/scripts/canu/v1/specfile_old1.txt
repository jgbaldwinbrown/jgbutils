mhapConcurrency=4
mhapThreads=8
mhapMemory=64

mmapConcurrency=4
mmapThread=8
mmapMemory=64

ovlConcurrency=4
ovlThread=8
ovlMemory=64

ovbConcurrency=4
ovbThread=8
ovbMemory=64

ovsConcurrency=4
ovsThread=8
ovsMemory=64

corConcurrency=4
corThread=8
corMemory=64

redConcurrency=4
redThread=8
redMemory=64

oeaConcurrency=4
oeaThread=8
oeaMemory=64

batConcurrency=4
batThread=8
batMemory=64

cnsConcurrency=4
cnsThread=8
cnsMemory=64

#{prefix}Concurrency <integer=unset>
#    Set the number of tasks that can run at the same time, when running without grid support.
#{prefix}Threads <integer=unset>
#    Set the number of compute threads used per task.
#{prefix}Memory <integer=unset>
#    Set the amount of memory, in gigabytes, to use for each job in a task. 
#
#Prefix 	Algorithm
#
#    cor
#
#    obt
#
#    utg
#
#	mhap 	
#Overlap generation using the
#‘mhap’ algorithm for
#‘cor’=correction,, ‘obt’=trimming
#or ‘utg’=assembly.
#
#    cor
#
#    obt
#
#    utg
#
#	mmap 	
#Overlap generation using the
#‘minimap’ algorithm for
#‘cor’=correction,, ‘obt’=trimming
#or ‘utg’=assembly.
#
#    cor
#
#    obt
#
#    utg
#
#	ovl 	
#Overlap generation using the
#‘overlapInCore’ algorithm for
#‘cor’=correction,, ‘obt’=trimming
#or ‘utg’=assembly.
#  	ovb 	Parallel overlap store bucketizing
#  	ovs 	Parallel overlap store bucket sorting
#  	cor 	Read correction
#  	red 	Error detection in reads
#  	oea 	Error adjustment in overlaps
#  	bat 	Unitig/contig construction
#  	cns 	Unitig/contig consensus

